#!/usr/bin/perl
# Retrieve solar x-ray data.  2-clause BSD license.

# Copyright 2018 /u/molo1134. All rights reserved.


my $username = $ENV{'USER'} || $ENV{'USERNAME'} || getpwuid($<);
my $highlight="vt220";
$highlight = "none" if ! -t STDOUT;
$highlight = "irc" if $username eq "eggdrop";

my $url = "http://services.swpc.noaa.gov/products/latest-xray-event.json";
my %data;

open (HTTP, '-|', "curl -s $url");
while (<HTTP>) {
  @entries = split /,/;
  foreach my $e (@entries) {
    $e =~ s/^{//;
    $e =~ s/}$//;
    #print "$e\n";
    if ($e =~ /^\s*"([^"]+)":"([^"]+)"\s*$/) {
      $data{$1} = $2;
      #print "$1 = $2\n";
    }
  }
}
close(HTTP);

my $curr_time = $data{current_time};
$curr_time =~ s/:00$//;
my $max_time = $data{max_time};
$max_time =~ s/:00$//;

print "Xray status: ". colorize($data{current_class}) . " at ${curr_time}z; recent flare: " . colorize($data{max_class}) . " at ${max_time}z\n";

#print colorize("M1.1"), "\n";
#print colorize("M5.1"), "\n";
#print colorize("X1.1"), "\n";
#print colorize("X9.1"), "\n";
#print colorize("X10.1"), "\n";
#print colorize("X20.1"), "\n";

sub colorize {
  my $s = shift;
  $s = green($s) if $s =~ /^[ABC]/;
  $s = yellow($s) if $s =~ /^M/;
  $s = red($s) if $s =~ /^X[0-9][^0-9]/;
  $s = lightblue($s) if $s =~ /^X[0-9]{2}/;
  return $s;
}

sub darkRed {
  my $s = shift;
  if ($highlight eq "irc") {
    return "\x035\x02\x02$s\x03"
  } elsif ($highlight eq "vt220") {
    return "\e[31m$s\e[0m"
  } else {
    return $s;
  }
}
sub red {
  my $s = shift;
  if ($highlight eq "irc") {
    return "\x034\x02\x02$s\x03"
  } elsif ($highlight eq "vt220") {
    return "\e[1;31m$s\e[0m"
  } else {
    return $s;
  }
}
sub yellow {
  my $s = shift;
  if ($highlight eq "irc") {
    return "\x038\x02\x02$s\x03"
  } elsif ($highlight eq "vt220") {
    return "\e[1;33m$s\e[0m"
  } else {
    return $s;
  }
}
sub green {
  my $s = shift;
  if ($highlight eq "irc") {
    return "\x033\x02\x02$s\x03"
  } elsif ($highlight eq "vt220") {
    return "\e[32m$s\e[0m"
  } else {
    return $s;
  }
}
sub lightblue {
  my $s = shift;
  if ($highlight eq "irc") {
    return "\x0312\x02\x02$s\x03"
  } elsif ($highlight eq "vt220") {
    return "\e[1;34m$s\e[0m"
  } else {
    return $s;
  }
}
